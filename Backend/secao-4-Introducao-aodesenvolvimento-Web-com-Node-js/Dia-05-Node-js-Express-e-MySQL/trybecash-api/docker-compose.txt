Voc√™ j√° criou o arquivo .env para turbinar seu Docker Compose? Se ainda n√£o, fica ligado nessa dica incr√≠vel! üòé

Olha s√≥ esse exemplo:

Copiar
MYSQL_ROOT_PASSWORD=123456
MYSQL_DATABASE=db_example
MYSQL_PORT=3307
MYSQL_USER=root
MYSQL_PASSWORD=123456
MYSQL_HOST=localhost
Depois de configurar o seu .env, √© s√≥ utilizar as vari√°veis de ambiente no Docker Compose:

Copiar
version: '3.7'

services:
  db:
    image: mysql:8.0.21
    platform: linux/amd64
    container_name: database
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # vari√°vel de ambiente do arquivo .env
      MYSQL_DATABASE: ${MYSQL_DATABASE} # vari√°vel de ambiente do arquivo .env
    ports:
      # porta do localhost:porta do container
      - ${MYSQL_PORT}:3306
    env_file:
      - .env # arquivo de vari√°veis de ambiente
E olha s√≥: mudamos a porta padr√£o do MySQL para a porta 3307! √Äs vezes, precisamos mudar a porta padr√£o quando j√° temos uma aplica√ß√£o em execu√ß√£o. üòâ

Agora, com o Docker Compose turbinado pelo arquivo .env, voc√™ pode usar o MySQL Workbench e ter uma vis√£o geral do seu banco de dados. N√£o √© incr√≠vel?